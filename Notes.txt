15:
MVC - Model - View - Controller [aka desgin pattern]
[Split code into 3 parts]
1. Model = saves and manages the data. [all code in data folder]
2. view = takes data and displays it ont the page [checkout.js]
3. controller = run some code when we interact with page [event listeners in checkout.js]

-----
Testing:
Used Jasmine for Testing the Code.
Jasmine is a Testing Framework that helps us Test Code easily.
[delte specs and src folers]
1. describe() --> a Function in Jasmine
2. it() --> it describes Test.
3. spyOn --> In simple words, `spyOn` in Jasmine watches a specific function to see if it's called, how many times it's called, and with what arguments, and you can also make it behave differently during the test.
4.beforeEach() --> In Jasmine, `beforeEach()` is a function that runs specific code before every test (`it` block) in a test suite, ensuring each test starts with the same setup or preparation.
5.beforeAll()
6.done =>

[beforeAll((done) => {
    loadProducts(() => {
        done();
    });
})]

----
OOPS-[organizing code into objects]
classes
inheritance and Polymorphism
----
18:
1. Pormises : a better way to handle Asynchronous code
2: Similar to done() in Jasmine
3. let us wait till async code to finish before we move furthuer.
4. Promise.all(): lets us run multiple promises at the same time and wait for all of them to finish